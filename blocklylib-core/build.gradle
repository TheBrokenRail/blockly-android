apply plugin: 'com.android.library'

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'

    defaultConfig {
        minSdkVersion 18
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
        }
    }

    packagingOptions {
      // Suppress file collision error from hamcrest-core and hamcrest-integration JARs.
      exclude 'LICENSE.txt'
    }

    sourceSets {
        main.java.srcDirs += 'src/third_party/main/java'
    }
    lintOptions {
          abortOnError false
    }
    publishNonDefault false
}

dependencies {
    implementation 'com.android.support:support-v4:27.1.1'
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:recyclerview-v7:27.1.1'
    implementation 'com.android.support:support-annotations:27.1.1'
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task getBlockly {
    def files = [
            'blockly_compressed.js': 'src/main/assets/blockly_compressed.js',
            'blocks_compressed.js': 'src/main/assets/blocks_compressed.js',
            'javascript_compressed.js': 'src/main/assets/generators/javascript_compressed.js',
            'lua_compressed.js': 'src/main/assets/generators/lua_compressed.js',
            'php_compressed.js': 'src/main/assets/generators/php_compressed.js',
            'python_compressed.js': 'src/main/assets/generators/python_compressed.js',
            'dart_compressed.js': 'src/main/assets/generators/dart_compressed.js',
            'msg/js/en.js': 'src/main/assets/msg/js/en.js'
    ]
    for (Map.Entry<String, Object> entry : files.entrySet()) {
        def file = new File(projectDir, entry.getValue())
        file.getParentFile().mkdirs()
        if (!file.exists()) {
            new URL('https://raw.githubusercontent.com/google/blockly/master/' + entry.getKey()).withInputStream{ i -> file.withOutputStream{ it << i }}
        }
    }
}

tasks.withType(JavaCompile) { compileTask -> compileTask.dependsOn getBlockly }

// TODO(#632): Fix JavaDoc compilation, and then update deployment artifacts.
//task javadoc(type: Javadoc) {
//    source = android.sourceSets.main.java.srcDirs
//    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//}

//task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier = 'javadoc'
//    from javadoc.destinationDir
//    // options.encoding = 'UTF-8'
//}

apply from: 'deploy.gradle'
